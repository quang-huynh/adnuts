% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shmc.R
\name{run_mcmc.hmc}
\alias{run_mcmc.hmc}
\title{[BETA VERSION] Draw MCMC samples from a model posterior using a static
HMC sampler.}
\usage{
run_mcmc.hmc(iter, fn, gr, init, L, eps = NULL, covar = NULL,
  adapt_delta = 0.8, warmup = floor(iter/2), chain = 1, thin = 1)
}
\arguments{
\item{iter}{The number of samples to return.}

\item{fn}{A function that returns the log of the posterior density.}

\item{gr}{A function that returns a vector of gradients of the log of
the posterior density (same as \code{fn}).}

\item{init}{A vector of initial parameter values.}

\item{L}{The number of leapfrog steps to take. The NUTS algorithm does
not require this as an input. If \code{L=1} this function will perform
Langevin sampling. In some contexts \code{L} can roughly be thought of
as a thinning rate.}

\item{eps}{The step size. If a numeric value is passed, it will be used
throughout the entire chain. A \code{NULL} value will initiate
sampler_params of \code{eps} using the dual averaging algorithm during
the first \code{warmup} steps.}

\item{covar}{An optional covariance (mass) matrix which can be used to
improve the efficiency of sampling. The lower Cholesky decomposition
of this matrix is used to transform the parameter space. If the
posterior is approximately multivariate normal and \code{covar}
approximates the covariance, then the transformed parameter space will
be close to multivariate standard normal. In this case the algorithm
will be more efficient, but there will be overhead in the matrix
calculations which need to be done at each step. The default of NULL
specifies to not do this transformation and use a unit diagonal
matrix.}

\item{adapt_delta}{The target acceptance rate if using apative
\code{eps}. Defaults to 0.8.}

\item{warmup}{How many iterations to use for a warmup, in which the step
size will be adapted. The default is \code{warmup=iter/2}.}

\item{chain}{The MCMC chain to run. Only used for bookkeeping at the
moment.}
}
\value{
A list containing samples ('par') and algorithm details such as
  step size adaptation and acceptance probabilities per iteration
  ('sampler_params').
}
\description{
[BETA VERSION] Draw MCMC samples from a model posterior using a static
HMC sampler.
}
\details{
This function implements algorithm 5 of Hoffman and Gelman
  (2014), which includes adaptive step sizes (\code{eps}) via an
  algorithm called dual averaging.
}
\references{
\itemize{ \item{Neal, R. M. (2011). MCMC using Hamiltonian
  dynamics. Handbook of Markov Chain Monte Carlo.}  \item{Hoffman and
  Gelman (2014). The No-U-Turn sampler: Adaptively setting path lengths
  in Hamiltonian Monte Carlo. J. Mach. Learn. Res.  15:1593-1623.}  }
}
\seealso{
\code{run_mcmc}, \code{run_mcmc.nuts},
  \code{run_mcmc.rwm}
}

